// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package main_test

import (
	"go100tips/cmd/mock/matryer_moq"
	"sync"
)

// Ensure, that FourDimensionalPocketMock does implement main.FourDimensionalPocket.
// If this is not the case, regenerate this file with moq.
var _ main.FourDimensionalPocket = &FourDimensionalPocketMock{}

// FourDimensionalPocketMock is a mock implementation of main.FourDimensionalPocket.
//
//	func TestSomethingThatUsesFourDimensionalPocket(t *testing.T) {
//
//		// make and configure a mocked main.FourDimensionalPocket
//		mockedFourDimensionalPocket := &FourDimensionalPocketMock{
//			GetDokodemodoaFunc: func() (string, error) {
//				panic("mock out the GetDokodemodoa method")
//			},
//			GetTakecopterFunc: func() (string, error) {
//				panic("mock out the GetTakecopter method")
//			},
//		}
//
//		// use mockedFourDimensionalPocket in code that requires main.FourDimensionalPocket
//		// and then make assertions.
//
//	}
type FourDimensionalPocketMock struct {
	// GetDokodemodoaFunc mocks the GetDokodemodoa method.
	GetDokodemodoaFunc func() (string, error)

	// GetTakecopterFunc mocks the GetTakecopter method.
	GetTakecopterFunc func() (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetDokodemodoa holds details about calls to the GetDokodemodoa method.
		GetDokodemodoa []struct {
		}
		// GetTakecopter holds details about calls to the GetTakecopter method.
		GetTakecopter []struct {
		}
	}
	lockGetDokodemodoa sync.RWMutex
	lockGetTakecopter  sync.RWMutex
}

// GetDokodemodoa calls GetDokodemodoaFunc.
func (mock *FourDimensionalPocketMock) GetDokodemodoa() (string, error) {
	if mock.GetDokodemodoaFunc == nil {
		panic("FourDimensionalPocketMock.GetDokodemodoaFunc: method is nil but FourDimensionalPocket.GetDokodemodoa was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetDokodemodoa.Lock()
	mock.calls.GetDokodemodoa = append(mock.calls.GetDokodemodoa, callInfo)
	mock.lockGetDokodemodoa.Unlock()
	return mock.GetDokodemodoaFunc()
}

// GetDokodemodoaCalls gets all the calls that were made to GetDokodemodoa.
// Check the length with:
//
//	len(mockedFourDimensionalPocket.GetDokodemodoaCalls())
func (mock *FourDimensionalPocketMock) GetDokodemodoaCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetDokodemodoa.RLock()
	calls = mock.calls.GetDokodemodoa
	mock.lockGetDokodemodoa.RUnlock()
	return calls
}

// GetTakecopter calls GetTakecopterFunc.
func (mock *FourDimensionalPocketMock) GetTakecopter() (string, error) {
	if mock.GetTakecopterFunc == nil {
		panic("FourDimensionalPocketMock.GetTakecopterFunc: method is nil but FourDimensionalPocket.GetTakecopter was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetTakecopter.Lock()
	mock.calls.GetTakecopter = append(mock.calls.GetTakecopter, callInfo)
	mock.lockGetTakecopter.Unlock()
	return mock.GetTakecopterFunc()
}

// GetTakecopterCalls gets all the calls that were made to GetTakecopter.
// Check the length with:
//
//	len(mockedFourDimensionalPocket.GetTakecopterCalls())
func (mock *FourDimensionalPocketMock) GetTakecopterCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetTakecopter.RLock()
	calls = mock.calls.GetTakecopter
	mock.lockGetTakecopter.RUnlock()
	return calls
}
