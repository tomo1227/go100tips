// Code generated by MockGen. DO NOT EDIT.
// Source: main.go
//
// Generated by this command:
//
//	mockgen -source=main.go -destination=mock/mock_main.go -exclude_interfaces=Bird -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFourDimensionalPocket is a mock of FourDimensionalPocket interface.
type MockFourDimensionalPocket struct {
	ctrl     *gomock.Controller
	recorder *MockFourDimensionalPocketMockRecorder
	isgomock struct{}
}

// MockFourDimensionalPocketMockRecorder is the mock recorder for MockFourDimensionalPocket.
type MockFourDimensionalPocketMockRecorder struct {
	mock *MockFourDimensionalPocket
}

// NewMockFourDimensionalPocket creates a new mock instance.
func NewMockFourDimensionalPocket(ctrl *gomock.Controller) *MockFourDimensionalPocket {
	mock := &MockFourDimensionalPocket{ctrl: ctrl}
	mock.recorder = &MockFourDimensionalPocketMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFourDimensionalPocket) EXPECT() *MockFourDimensionalPocketMockRecorder {
	return m.recorder
}

// GetDokodemodoa mocks base method.
func (m *MockFourDimensionalPocket) GetDokodemodoa() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDokodemodoa")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDokodemodoa indicates an expected call of GetDokodemodoa.
func (mr *MockFourDimensionalPocketMockRecorder) GetDokodemodoa() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDokodemodoa", reflect.TypeOf((*MockFourDimensionalPocket)(nil).GetDokodemodoa))
}

// GetTakecopter mocks base method.
func (m *MockFourDimensionalPocket) GetTakecopter() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTakecopter")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTakecopter indicates an expected call of GetTakecopter.
func (mr *MockFourDimensionalPocketMockRecorder) GetTakecopter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTakecopter", reflect.TypeOf((*MockFourDimensionalPocket)(nil).GetTakecopter))
}
